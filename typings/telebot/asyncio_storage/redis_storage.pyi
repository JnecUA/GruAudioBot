"""
This type stub file was generated by pyright.
"""

from telebot.asyncio_storage.base_storage import StateStorageBase

redis_installed = ...
class StateRedisStorage(StateStorageBase):
    """
    This class is for Redis storage.
    This will work only for states.
    To use it, just pass this class to:
    TeleBot(storage=StateRedisStorage())
    """
    def __init__(self, host=..., port=..., db=..., password=..., prefix=...) -> None:
        ...
    
    async def get_record(self, key): # -> Any | None:
        """
        Function to get record from database.
        It has nothing to do with states.
        Made for backward compatibility
        """
        ...
    
    async def set_record(self, key, value): # -> Literal[True]:
        """
        Function to set record to database.
        It has nothing to do with states.
        Made for backward compatibility
        """
        ...
    
    async def delete_record(self, key): # -> Literal[True]:
        """
        Function to delete record from database.
        It has nothing to do with states.
        Made for backward compatibility
        """
        ...
    
    async def set_state(self, chat_id, user_id, state): # -> Literal[True]:
        """
        Set state for a particular user in a chat.
        """
        ...
    
    async def delete_state(self, chat_id, user_id): # -> bool:
        """
        Delete state for a particular user in a chat.
        """
        ...
    
    async def get_value(self, chat_id, user_id, key): # -> Any | None:
        """
        Get value for a data of a user in a chat.
        """
        ...
    
    async def get_state(self, chat_id, user_id): # -> Any | None:
        """
        Get state of a user in a chat.
        """
        ...
    
    async def get_data(self, chat_id, user_id): # -> Any | None:
        """
        Get data of particular user in a particular chat.
        """
        ...
    
    async def reset_data(self, chat_id, user_id): # -> Literal[True] | None:
        """
        Reset data of a user in a chat.
        """
        ...
    
    async def set_data(self, chat_id, user_id, key, value): # -> bool:
        """
        Set data without interactive data.
        """
        ...
    
    def get_interactive_data(self, chat_id, user_id): # -> StateContext:
        """
        Get Data in interactive way.
        You can use with() with this function.
        """
        ...
    
    async def save(self, chat_id, user_id, data): # -> Literal[True] | None:
        ...
    


